# server {
#     if ($host = youttala.com) {
#         return 301 https://$host$request_uri;
#     } # managed by Certbot

#     server_name youttala.com;

# }

upstream backend {
   server 0.0.0.0:3002;
}

server {
	# listen                  443 ssl http2 ;
	# listen                  [::]:443 ssl http2 ;
        # server_name             timelapse.atlasimaging.co; # managed by Certbot
	listen                  80 http2;
	listen                  [::]:80 ssl http2;
        # server_name             timelapse.atlasimaging.co; # managed by Certbot
	root                    /var/www/html/youttala;
	index                   index.php index.html index.htm index.nginx-debian.html;
    try_files               $uri $uri/ /index.html;

	# listen                  443 ssl http2 ;
	# listen                  [::]:443 ssl http2 ;
        # server_name             timelapse.atlasimaging.co; # managed by Certbot
	# root                    /var/www/html/timelapse;
	# index                   index.php index.html index.htm index.nginx-debian.html;
        # try_files               $uri $uri/ /index.html;

        dav_methods PUT DELETE;
        more_set_headers "allow: GET, POST, HEAD, PURGE, PUT, DELETE, PATCH" always;

	location /api/ {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		proxy_pass http://backend;
                # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                # proxy_set_header Host $http_host;
                # proxy_set_header X-Forwarded-Proto $scheme;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;

	}

#     ssl_certificate /etc/letsencrypt/live/youttala.com/fullchain.pem; # managed by Certbot
#     ssl_certificate_key /etc/letsencrypt/live/youttala.com/privkey.pem; # managed by Certbot
}
